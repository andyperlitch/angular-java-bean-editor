"use strict";angular.module("angularJavaBeanEditor",["ui.bootstrap","dt.javaBeanEditor"]),angular.module("angularJavaBeanEditor").controller("NavbarCtrl",["$scope",function(e){e.date=new Date}]),angular.module("dt.javaBeanEditor",[]).directive("javaBeanEditor",function(){var e={pre:function(e){console.log("linking javaBeanEditor"),e.values=e.values[e.typeSchema.name]}};return{scope:{typeSchema:"=",values:"=",helperService:"="},templateUrl:"components/javaBeanEditor/javaBeanEditor.html",link:e}}).directive("jbeProperty",function(){var e={"boolean":"boolean","int":"int","double":"double","long":"int","java.lang.String":"string","java.util.List":"array","java.util.ArrayList":"array"};return{scope:!0,templateUrl:"components/javaBeanEditor/jbeProperty.html",link:{pre:function(a,t,r){var n=a.property;a.propertyDisplayName=_.startCase(n.name),a.hideLabel=a.$eval(r.hideLabel),a.valueType=a.values[n.name]instanceof Array?"array":typeof a.values[n.name];var p=e[n.type];if(a.inputType=p?p:0===n.type.indexOf("[L")&&";"===n.type.slice(-1)?"array":"complex","array"===a.inputType){if(a.typeArg=n.hasOwnProperty("typeArgs")?n.typeArgs[0].type:n.type.slice(2,-1),"array"===a.valueType)a.values=a.values[n.name];else if(angular.isObject(a.values[n.name])){var o=Object.keys(a.values[n.name])[0];a.values=a.values[n.name][o]}else null===a.values[n.name]&&(a.values=null);a.addNew=function(){a.values.push(null)}}}}}}).directive("jbeComplexProperty",["$q",function(e){var a=["number","string","boolean"];return{scope:!1,templateUrl:"components/javaBeanEditor/jbeComplexProperty.html",link:{pre:function(t){t.propertyDisplayName=_.startCase(t.property.name),t.getDisplayValue=function(e){return a.indexOf(typeof e)>-1?e:e instanceof Array?e:null===e?"null":"(complex object)"},t.edit=function(){t.editing=!0;var a,r=t.property,n=r.type,p=t.values[r.name],o=!0,l=!0;null===p?o=!1:angular.isObject(p)?a=Object.keys(p)[0]:(a=n,l=!1),console.log("property",r),console.log("value",p),console.log("values",t.values),console.log("valueType",a),console.log("shouldFetchAssignableTypes? ",l),console.log("shouldFetchValueTypeSchema? ",o);var i=l?t.helperService.getAssignableTypes(n):e.when(void 0),s=o?t.helperService.getTypeSchema(a):e.when(void 0);t.retrievingEditInfo=!0,t.assignableTypes=void 0,t.valueTypeSchema=void 0;var c=e.all([i,s]);c.then(function(e){t.assignableTypes=e[0],t.valueTypeSchema=e[1]},function(){console.log("error...",arguments)}),c.finally(function(){t.retrievingEditInfo=!1})}}}}}]).directive("jbeArrayProperty",function(){return{scope:{arrayProperty:"=jbeArrayProperty",typeArg:"=",values:"=",index:"=",helperService:"="},templateUrl:"components/javaBeanEditor/jbeArrayProperty.html",link:{pre:function(e){e.arrayProperty;e.property={canGet:!0,canSet:!0,name:e.index,type:e.typeArg}}}}}),angular.module("angularJavaBeanEditor").controller("MainCtrl",["$scope","typeSchemaHelper",function(e,a){e.typeSchemaHelper=a,a.getTypeSchema("com.datatorrent.stram.webapp.OperatorDiscoveryTest$TestOperator").then(function(a){e.exampleTypeSchema=a}),e.exampleValueSchema={"com.datatorrent.stram.webapp.OperatorDiscoveryTest$TestOperator":{name:null,intProp:0,longProp:0,doubleProp:0,booleanProp:!0,stringList:{"java.util.ArrayList":["four","five"]},props:{"java.util.Properties":{key1:"value1"}},nested:null,map:{"java.util.HashMap":{key1:{"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured":{size:0,name:null,list:null}}}},stringArray:["one","two","three"],color:"BLUE",structuredArray:{"[Lcom.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured;":[{"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured":{size:0,name:"s1",list:null}}]}}}}]).factory("typeSchemaHelper",["$q","$timeout",function(e,a){var t={"com.datatorrent.stram.webapp.OperatorDiscoveryTest$TestOperator":{name:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$TestOperator",properties:[{name:"booleanProp",canGet:!0,canSet:!0,type:"boolean"},{name:"color",canGet:!0,canSet:!0,type:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Color"},{name:"doubleProp",canGet:!0,canSet:!0,type:"double"},{name:"intProp",canGet:!0,canSet:!0,type:"int"},{name:"longProp",canGet:!0,canSet:!0,type:"long"},{name:"map",canGet:!0,canSet:!0,typeArgs:[{type:"java.lang.String"},{type:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured"}],type:"java.util.Map"},{name:"name",canGet:!0,canSet:!0,type:"java.lang.String"},{name:"nested",canGet:!0,canSet:!0,type:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured"},{name:"props",canGet:!0,canSet:!0,type:"java.util.Properties"},{name:"stringArray",canGet:!0,canSet:!1,type:"[Ljava.lang.String;"},{name:"stringList",canGet:!0,canSet:!0,typeArgs:[{type:"java.lang.String"}],type:"java.util.List"},{name:"structuredArray",canGet:!0,canSet:!0,type:"[Lcom.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured;"}]},"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured":{name:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Structured",properties:[{name:"list",canGet:!0,canSet:!0,typeArgs:[{type:"java.lang.String"}],type:"java.util.ArrayList"},{name:"name",canGet:!0,canSet:!0,type:"java.lang.String"},{name:"size",canGet:!0,canSet:!0,type:"int"}]},"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Color":{name:"com.datatorrent.stram.webapp.OperatorDiscoveryTest$Color","enum":["BLUE","RED","WHITE"],properties:[{name:"declaringClass",canGet:!0,canSet:!1,typeArgs:[{type:"E"}],type:"java.lang.Class"}]}};return{getAssignableTypes:function(){var t=e.defer();return a(function(){t.resolve([])}),t.promise},getTypeSchema:function(r){console.log("className",r);var n=e.defer();return a(function(){n.resolve(t[r])},1e3),n.promise}}}]),angular.module("angularJavaBeanEditor").run(["$templateCache",function(e){e.put("components/javaBeanEditor/javaBeanEditor.html",'<div ng-repeat="property in typeSchema.properties"><div jbe-property=""></div></div>'),e.put("components/javaBeanEditor/jbeArrayProperty.html",'<div jbe-property="" hide-label="true"></div>'),e.put("components/javaBeanEditor/jbeComplexProperty.html",'<div ng-hide="editing"><label>{{propertyDisplayName}}</label>: <em class="text-muted">{{ getDisplayValue(values[property.name]) }}</em> <a href="" ng-click="edit()" ng-hide="editing"><span class="glyphicon glyphicon-pencil"></span></a></div><div ng-show="retrievingEditInfo" class="text-muted">loading edit infoâ€¦</div><div ng-if="editing && !retrievingEditInfo"><div class="panel panel-default"><div class="panel-heading">{{propertyDisplayName}}</div><div class="panel-body"><div ng-if="valueTypeSchema" java-bean-editor="" helper-service="helperService" type-schema="valueTypeSchema" values="values[property.name]"></div></div></div></div>'),e.put("components/javaBeanEditor/jbeProperty.html","<div ng-class=\"'jbe-type input-type-' + inputType\" ng-include=\"'components/javaBeanEditor/inputTemplates/' + inputType + '.html'\"></div>"),e.put("components/navbar/navbar.html",'<nav class="navbar navbar-static-top navbar-default" ng-controller="NavbarCtrl"><div class="container"><div class="navbar-header"><a class="navbar-brand" href="https://github.com/Swiip/generator-gulp-angular"><span class="glyphicon glyphicon-edit"></span> Java Bean Editor Prototype</a></div></div></nav>'),e.put("components/javaBeanEditor/inputTemplates/array.html",'<label>{{propertyDisplayName}}</label><div class="well well-sm"><p ng-if="!values" class="text-muted"><em>(null)</em></p><div ng-if="values" ng-repeat="value in values track by $index" jbe-array-property="property" type-arg="typeArg" values="values" helper-service="helperService" index="$index"></div><button class="btn btn-success" ng-click="addNew()"><span class="glyphicon glyphicon-plus"></span> add one</button></div>'),e.put("components/javaBeanEditor/inputTemplates/boolean.html",'<div class="checkbox"><label><input type="checkbox" ng-model="values[property.name]"> <span ng-bind="propertyDisplayName" ng-attr-title="{{property.name}}"></span></label></div>'),e.put("components/javaBeanEditor/inputTemplates/complex.html",'<div jbe-complex-property=""></div>'),e.put("components/javaBeanEditor/inputTemplates/double.html",'<div class="form-group"><label ng-attr-for="{{property.name}}" ng-hide="hideLabel"><span ng-bind="propertyDisplayName" ng-attr-title="{{property.name}}"></span></label> <input type="number" class="form-control" ng-attr-name="{{property.name}}" placeholder="double" ng-model="values[property.name]" step="0.01" ng-model-options="{updateOn: \'blur\'}"></div>'),e.put("components/javaBeanEditor/inputTemplates/int.html",'<div class="form-group"><label ng-attr-for="{{property.name}}" ng-hide="hideLabel"><span ng-bind="propertyDisplayName" ng-attr-title="{{property.name}}"></span></label> <input type="number" class="form-control" ng-attr-name="{{property.name}}" ng-attr-placeholder="{{property.type}}" ng-model="values[property.name]" step="1" ng-model-options="{updateOn: \'blur\'}"></div>'),e.put("components/javaBeanEditor/inputTemplates/string.html",'<div class="form-group"><label ng-attr-for="{{property.name}}" ng-hide="hideLabel"><span ng-bind="propertyDisplayName" ng-attr-title="{{property.name}}"></span></label> <input type="text" class="form-control" ng-attr-name="{{property.name}}" placeholder="string" ng-model="values[property.name]" ng-model-options="{updateOn: \'blur\'}"></div>')}]);